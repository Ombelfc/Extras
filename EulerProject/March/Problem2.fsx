// MARCH

#load @"C:\Users\berra\source\repos\Extras\EulerProject\Helpers.fs"

open EulerProject.Helpers
open Helpers

// Problem 2:
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// Each sequence element is computed when needed (think IEnumerable)
let fibonacciSeq = Seq.initInfinite (fun x -> fibonacci x)

fibonacciSeq |> Seq.takeWhile (fun x -> x < 4000000) 
             |> Seq.filter (fun x -> x % 2 = 0) 
             |> Seq.sum 
             |> printfn "%i"