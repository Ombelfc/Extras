#load "Helpers.fs"
open Helpers

//Problem 1: 
    //If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    //Find the sum of all the multiples of 3 or 5 below 1000.

    [0..999] |> List.filter (fun x -> (x % 3 = 0) || (x % 5 = 0)) |> List.sum |> printfn "%i";

//Problem 2:
    //Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    //By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

    let sequence = [0..4000000] |> fibonacci;
    [0..4000000] |> List.filter (fun x -> ((fibonacci x) % 2 = 0)) |> List.sum |> printfn "%i";